// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using article.data.context;

namespace article.api.Migrations
{
    [DbContext(typeof(articlecontext))]
    [Migration("20200830144250_initialize-v2")]
    partial class initializev2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("article.data.models.Article", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Articles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2b6880a4-909c-4c66-b091-56a8235d6303"),
                            Content = "Article Content 1",
                            CreatedDate = new DateTime(2020, 8, 30, 17, 42, 49, 623, DateTimeKind.Local).AddTicks(8080),
                            FullName = "Full Name 1",
                            Title = "Article Title 1"
                        },
                        new
                        {
                            Id = new Guid("b8c2d73a-be05-427c-ac59-fb6867e2d678"),
                            Content = "Article Content 2",
                            CreatedDate = new DateTime(2020, 8, 30, 17, 42, 49, 630, DateTimeKind.Local).AddTicks(5780),
                            FullName = "Full Name 2",
                            Title = "Article Title 2"
                        },
                        new
                        {
                            Id = new Guid("9ee2dac8-4f31-4a41-b88b-3b708ec458d5"),
                            Content = "Article Content 3",
                            CreatedDate = new DateTime(2020, 8, 30, 17, 42, 49, 630, DateTimeKind.Local).AddTicks(5840),
                            FullName = "Full Name 3",
                            Title = "Article Title 3"
                        });
                });

            modelBuilder.Entity("article.data.models.ArticleCategory", b =>
                {
                    b.Property<Guid>("ArticleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ArticleId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("ArticleCategories");
                });

            modelBuilder.Entity("article.data.models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("article.data.models.ArticleCategory", b =>
                {
                    b.HasOne("article.data.models.Article", "Article")
                        .WithMany("ArticleCategories")
                        .HasForeignKey("ArticleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("article.data.models.Category", "Category")
                        .WithMany("ArticleCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
